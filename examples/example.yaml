# Copyright 2020 VMware, Inc.
#
# Licensed under the Apache License, Version 2.0 (the "License"); you may
# not use this file except in compliance with the License.  You may obtain
# a copy of the License at
#
# http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS, WITHOUT
# WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  See the
# License for the specific language governing permissions and limitations
# under the License.

---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: httpbin
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/name: httpbin
  template:
    metadata:
      labels:
        app.kubernetes.io/name: httpbin
    spec:
      containers:
      - image: docker.io/kennethreitz/httpbin
        imagePullPolicy: IfNotPresent
        name: httpbin
        ports:
        - containerPort: 80

---
apiVersion: v1
kind: Service
metadata:
  name: httpbin
  labels:
    app.kubernetes.io/name: httpbin
spec:
  ports:
  - name: http
    port: 80
  selector:
    app.kubernetes.io/name: httpbin

---
#error[msg] {
#  # If the Error field is present, the last applied resource generated an
#  # error.
#  data.resources.applied.last.error
#
#  msg = sprintf("failed to update %s '%s/%s': %s", [
#    data.resources.applied.last.target.meta.kind,
#    data.resources.applied.last.target.namespace,
#    data.resources.applied.last.target.name,
#    data.resources.applied.last.error.message,
#  ])
#}

warning[msg] {
  true
  msg = sprintf("this check had a warning: %s", ["foo"])
}

fatal {
  false
  msg = sprintf("this check was fatal: %s", ["foo"])
}

